services:
  surveydb:
    image: postgres:17.4-alpine
    container_name: surveydb
    environment:
      POSTGRES_USER: ${DB_USER:-surveybox}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-surveybox}
      POSTGRES_DB: ${DB_NAME:-surveybox}
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - surveydb_data:/var/lib/postgresql/data
    networks:
      - survey_network
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${DB_USER:-surveybox}",
          "-d",
          "${DB_NAME:-surveybox}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  surveyapi:
    build:
      context: .
      dockerfile: api/Dockerfile.dev
      args:
        ARG_PORT: ${SERVER_PORT:-8081}
    container_name: surveyapi
    entrypoint:
      [
        "java",
        "-Djava.awt.headless=true",
        "-jar",
        "/app/app.jar",
        "--spring.profiles.active=dev",
      ]
    ports:
      - "${SERVER_PORT:-8081}:${SERVER_PORT:-8081}"
    depends_on:
      - surveydb
    volumes:
      - surveyapi_data:/tmp/files
    environment:
      SERVER_PORT: ${SERVER_PORT:-8081}
      PG_HOST: ${DB_HOST:-surveydb}
      PG_PORT: ${DB_PORT:-5432}
      PG_DATABASE: ${DB_NAME:-surveybox}
      PG_USERNAME: ${DB_USER:-surveybox}
      PG_PASSWORD: ${DB_PASSWORD:-surveybox}
      #File config
      FILE_SERVER_PATH: ${FILE_SERVER_PATH:-/tmp/surveybox/file}
      FILE_SERVER_QRCODE_PATH: ${FILE_SERVER_QRCODE_PATH:-/tmp/surveybox/qrcode}
      FILE_CLIENT_PATH: ${FILE_CLIENT_PATH:-/tmp/surveybox/client}
      FILE_SERVER_URL: ${FILE_SERVER_URL:-http://localhost:8081/file}
      FILE_DOWNLOAD_URL: ${FILE_DOWNLOAD_URL:-http://localhost:8081/file/download}
      FRONTEND_BASE_URL: ${FRONTEND_BASE_URL:-http://localhost:3000}
      FILE_CENTER_URL: ${FILE_CENTER_URL:-http://localhost:8081/file}
      # File size
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-1024KB}
      MAX_FILE_REQUEST_SIZE: ${MAX_FILE_REQUEST_SIZE:-1024KB}
      # Mail Configuration
      MAIL_USERNAME: ${MAIL_USERNAME:-surveybox}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-surveybox}
      MAIL_HOST: ${MAIL_HOST:-smtp.example.com}
      MAIL_PORT: ${MaIL_PORT:-587}
      MAIL_STARTTLS_AUTH: ${MAIL_STARTTLS_AUTH:-true}
      MAIL_STARTTLS_ENABLE: ${MAIL_STARTTLS_ENABLE:-true}
      MAIL_STARTTLS_REQUIRED: ${MAIL_STARTTLS_REQUIRED:-true}

      # JWT refresh tokens
      ACCESS_TOKEN_PRIVATE_KEY: ${ACCESS_TOKEN_PRIVATE_KEY:-}
      ACCESS_TOKEN_PUBLIC_KEY: ${ACCESS_TOKEN_PUBLIC_KEY:-}
      REFRESH_TOKEN_PRIVATE_KEY: ${ACCESS_TOKEN_PRIVATE_KEY:-}
      REFRESH_TOKEN_PUBLIC_KEY: ${ACCESS_TOKEN_PUBLIC_KEY:-}
    networks:
      - survey_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT:-8081}"]
      interval: 30s
      timeout: 10s
      retries: 3

  surveyui:
    image: node:20-alpine
    container_name: surveyui
    entrypoint: sh -c "npm install && npm run build && npm run start -- -H 0.0.0.0"
    ports:
      - "${NODE_PORT:-3000}:3000"
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./public:/app/public
      - ./.next:/app/.next
      - ./node_modules:/app/node_modules
      - ./next.config.js:/app/next.config.js
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./postcss.config.js:/app/postcss.config.js
      - ./jsconfig.json:/app/jsconfig.json
      - ./.env:/app/.env
    depends_on:
      - surveyapi
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - survey_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${NODE_PORT:-3000}"]
      interval: 30s
      timeout: 10s
      retries: 5

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    networks:
        - survey_network
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    networks:
      - survey_network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

networks:
  survey_network:
    driver: bridge
volumes:
  surveydb_data:
    driver: local
  surveyapi_data:
    driver: local
